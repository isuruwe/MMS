@model MMS.Ward_displaymodel

@{
    ViewBag.Title = "MMS";
}




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <section class="navbar navbar-fixed-top custom-navbar" role="navigation">
            <div class="container">

                <div class="collapse navbar-collapse">
                    <ul class="nav navbar-nav navbar-left">
                        <li>
                            <a href="@Url.Action("Index","Home")">HOME</a>

                        </li>
                        <li>
                            <div ng-show="showerror">
                                <span style="background-color:white">Error!</span>
                            </div>

                        </li>
                    </ul>
                    <ul class="nav navbar-nav navbar-right">
                       
                        @*<li><a href="#work">Lab Report</a></li>*@
                        @*<li><a href="#about" class="smoothScroll">ABOUT</a></li>*@

                        @*<li><a href="#portfolio" class="smoothScroll">PORTFOLIO</a></li>*@

                    </ul>

                </div>



            </div>
        </section>
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Pname, "Service No", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PserviceNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PserviceNo, "", new { @class = "text-danger" })
            </div>
        </div>
        
        
        <div class="form-group">
            @Html.LabelFor(model => model.Pname,"Patient Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row-fluid form-inline">
            @Html.LabelFor(model => model.RelationshipType, "RelationshipType", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RelationshipType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RelationshipType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row-fluid form-inline">
            @Html.LabelFor(model => model.Prank, "RANK", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RANK", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Prank, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group row-fluid form-inline">
            @Html.LabelFor(model => model.PwardD, "Ward", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Ward_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PwardD, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Pwardno,"Ward No", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pwardno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pwardno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pbedno,"Bed No", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pbedno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pbedno, "", new { @class = "text-danger" })
            </div>
        </div>

       

     

        <div class="form-group row-fluid form-inline">
            @Html.LabelFor(model => model.Padmitdate,"Admitted Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Padmitdate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.Padmitdate, "", new { @class = "text-danger" })
                @Html.ValidationMessage("CustomError", new { @class = "text-danger" })
               
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
               @*@if (Session["errormsv"] != null)
               { @Session["errormsv"].ToString() }*@
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
