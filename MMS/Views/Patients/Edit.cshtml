@model Patient

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts
{
    <script src="~/Scripts/Episode/v6/Module.js"></script>
    <script src="~/Scripts/Episode/v6/Service.js"></script>
    <script src="~/Scripts/Episode/v6/Controller.js"></script>
}

<script src="~/Scripts/Angular/angular.js"></script>
<script src="~/Scripts/Angular/angular-sanitize.js"></script>
<script src="~/Scripts/angular.min.js"></script>
<script src="~/Scripts/angular-route.js"></script>

<script src="~/Scripts/js/jquery.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/ui-bootstrap-tpls-1.3.3.min.js"></script>
<link rel="stylesheet" href="~/Scripts/css/bootstrap.min.css">
<link rel="stylesheet" href="~/Scripts/css/font-awesome.min.css">
<link rel="stylesheet" href="~/Scripts/css/animate.min.css">
<link rel="stylesheet" href="~/Scripts/css/et-line-font.css">
<link rel="stylesheet" href="~/Scripts/css/nivo-lightbox.css">
@*<link rel="stylesheet" href="~/Scripts/css/nivo_themes/default/default.css">*@
<link rel="stylesheet" href="~/Scripts/css/style.css">


@*<script src="~/Scripts/js/bootstrap.min.js"></script>*@
<script src="~/Scripts/js/smoothscroll.js"></script>
<script src="~/Scripts/js/isotope.js"></script>
<script src="~/Scripts/js/imagesloaded.min.js"></script>
<script src="~/Scripts/js/nivo-lightbox.min.js"></script>
<script src="~/Scripts/js/jquery.backstretch.min.js"></script>
<script src="~/Scripts/js/wow.min.js"></script>
<script src="~/Scripts/js/custom.js"></script>


@using (Html.BeginForm("Edit", "Patients", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()
    <div class="form-horizontal col-md-10">

        <div ng-app="EpisodeApp" class="container">


            <div ng-controller="EpisodeCntrl" data-ng-init="Getservicenoedt('@ViewBag.psvc');">
                <div class="form-horizontal">
                    <h4>Patient</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.PID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.LocationID, "LocationID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("LocationID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Service_Type, "Service_Type", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Service_Type", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Service_Type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ServiceNo, "ServiceNo", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ServiceNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ServiceNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RANK, "RANK", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("RANK", null, htmlAttributes: new { @class = "form-control"  })
                            @Html.ValidationMessageFor(model => model.RANK, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row-fluid form-inline" >
                        @Html.LabelFor(model => model.RelationshipType, "RelationshipType", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("RelationshipType", null, htmlAttributes: new { @class = "form-control",  id = "loclisd2", style = "pointer-events:none" })
                            @Html.ValidationMessageFor(model => model.RelationshipType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   
                        <div class="form-group">
                            @Html.Label("Child", htmlAttributes: new { @class = "control-label col-md-2" })
                            <select id="pdnew" ng-model="pidnew" ng-change="Surname=pidnew.ChildName;getdty(pidnew.DOB);" ng-options="d as d.ChildName for d in childet">
                                <option value="">-- Select Child --</option>
                            </select>
                        </div>
                   

                    <div class="form-group">
                        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", ng_model = "Surname" } })
                            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Initials, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Initials, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Initials, "", new { @class = "text-danger" })
                        </div>
                    </div>

                  

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", ng_model ="dtofb" } })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Sex, "Sex", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Sex", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BGID, "BGID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("BGID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BGID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MedCatID, "MedCatID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("MedCatID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MedCatID, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
