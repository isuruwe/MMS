@model List<MMS.Models.RolePermissionModel>

<style>
    tr {
        padding: 1px;
    }

    td, th {
        padding: 15px;
    }
</style>

@{
    ViewBag.Title = "MMS";
    // Layout = "~/Views/Shared/_PageLayout.cshtml";
}

<h2>Create</h2>
<div style="width:auto;padding:5px; background-color:white;">
    @using (Html.BeginForm("Create", "RolePermissions", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        if (@ViewBag.Message != null)
        {
            @ViewBag.Message
        }
        <div>
            <a href="#" id="addNew">Add New Role Permission</a>
        </div>
        <table id="dataTable" border="0">
            <tr>
                @*<th>Role</th>*@
                <td>@Html.Hidden("Role")</td>
                <th>Menu</th>
                <th>Show</th>
                <th>New</th>
                <th>Edit</th>
                <th>Delete</th>
                <th>Print</th>
                <th>Search</th>
                <th>Clear</th>
                <th></th>
            </tr>
            @if (Model != null && Model.Count > 0)
            {
                int j = 0;
                foreach (var i in Model)
                {
                    <tr>
                        @*<td>@Html.DropDownList("RoleID", "--Please Select Role Type--")</td>
                            <td>@Html.DropDownList("MenuID", "--Please Select Menu Item--")</td>*@
                        <td>@Html.HiddenFor(a => a[j].RoleID, (IEnumerable<SelectListItem>)ViewBag.RoleID)</td>
                        <td>@Html.DropDownListFor(a => a[j].MenuID, (IEnumerable<SelectListItem>)ViewBag.MenuID)</td>
                        <td>@Html.CheckBoxFor(a => a[j].SHO, new { @checked = "checked" })</td>
                        <td>@Html.CheckBoxFor(a => a[j].NEW, new { @checked = "checked" })</td>
                        <td>@Html.CheckBoxFor(a => a[j].EDT, new { @checked = "checked" })</td>
                        <td>@Html.CheckBoxFor(a => a[j].DEL, new { @checked = "checked" })</td>
                        <td>@Html.CheckBoxFor(a => a[j].PRN, new { @checked = "checked" })</td>
                        <td>@Html.CheckBoxFor(a => a[j].SER, new { @checked = "checked" })</td>
                        <td>@Html.CheckBoxFor(a => a[j].CER, new { @checked = "checked" })</td>
                        <td>
                            @*@if (j>0)
                                {
                                    <a href="#" class="remove">Remove</a>
                                }*@
                            <a href="#" class="remove">Remove</a>
                        </td>
                    </tr>
                }
            }
        </table>
        <input type="submit" value="Create" />
    }
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script lang="javascript">
        $(document).ready(function () {
            $("#addNew").click(function (e) {
                e.preventDefault(); // Prevent to redirect to the page of link
                var $tableBody = $("#dataTable");
                var $trLast = $tableBody.find("tr:last"); // identify last row of the 'dataTable'
                var $trNew = $trLast.clone(); // clone last

                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                $trNew.find("td:last").html('<a href="#" class="remove">Remove</a>');
                $.each($trNew.find(':input'), function (i, val) {
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);
                    var type = $(this).attr('type')
                    //if (type.toLocaleLowerCase() == "text") {
                    //    $(this).attr('value','');
                    //alert("text");
                    //}
                    $(this).removeClass("input-validation-error");
                });

                $trLast.after($trNew);

                var form = $("form")
                .removeData("validator")
                .removeData("unobtrusiveValidation");

                $.validator.unobtrusive.parse(form);
            });
            $('a.remove').live("click", function (e) {
                e.preventDefault();
                $(this).parent().parent().remove();
            });
        });
    </script>
}
